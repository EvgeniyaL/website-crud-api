// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TitanGate.Website.Api.Repository;

namespace TitanGate.Website.Api.Repository.Migrations
{
    [DbContext(typeof(RepositoriesContext))]
    [Migration("20200510180930_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TitanGate.Website.Api.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "eCommerce"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Business"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Portfolio"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Media"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Brochure"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Nonprofit"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Educational"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Infopreneur"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Community Forum"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Personal"
                        });
                });

            modelBuilder.Entity("TitanGate.Website.Api.Domain.Entities.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("LoginOfWebsiteId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("LoginOfWebsiteId")
                        .IsUnique();

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("TitanGate.Website.Api.Domain.Entities.Website", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Websites");
                });

            modelBuilder.Entity("TitanGate.Website.Api.Domain.Entities.Login", b =>
                {
                    b.HasOne("TitanGate.Website.Api.Domain.Entities.Website", "Website")
                        .WithOne("Login")
                        .HasForeignKey("TitanGate.Website.Api.Domain.Entities.Login", "LoginOfWebsiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TitanGate.Website.Api.Domain.Entities.Website", b =>
                {
                    b.HasOne("TitanGate.Website.Api.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
